version: '3.8'

services:
  # 后端API服务
  backend:
    build: .
    container_name: enterprise-admin-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./backend.db
      - SECRET_KEY=production-secret-key-change-this
      - DEBUG=false
    volumes:
      - ./backend.db:/app/backend.db
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL数据库（生产环境推荐）
  # postgres:
  #   image: postgres:15
  #   container_name: enterprise-admin-db
  #   environment:
  #     POSTGRES_DB: enterprise_admin
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Redis缓存
  # redis:
  #   image: redis:7-alpine
  #   container_name: enterprise-admin-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Nginx反向代理（可选）
  # nginx:
  #   image: nginx:alpine
  #   container_name: enterprise-admin-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - backend
  #   restart: unless-stopped

# volumes:
#   postgres_data:
#   redis_data:
